#include "comm.hpp"

//两个进程想通过共享内存通信
//1.首先进程a根据key值让操作系统申请共享内存
//通过唯一的key值来让操作系统申请一块唯一的共享内存，所以第一步首先需要约定以一个key值
//本质就是操作系统会拿这个key值去构造一个结构体对象，该结构体对象是用来管理共享内存的
//2.进程a的地址空间需要挂接到共享内存
//3.不用了就去挂接
//4.共享内存是没有同步互斥的，我们可以利用管道的方式，来进行同步，在进行通信之前，创建
//命名管道，并将命名管道打开。开始接受信息，一旦接受到一个信息才可以进行输出，如果没有收到就在等待

int main()
{
   //1.创建共享内存
   int shmid=CreatSM();
   
   //2.挂接到共享内存--挂接到地址空间的哪里呢？挂接到shmadder地方
   char*shmaddr=(char*)shmat(shmid,nullptr,0);
   //3.通信
  while(true)
  {
     cout<<"client say@ "<<shmaddr<<endl;
    
  }

   //4.不用了去关联
   shmdt(shmaddr);

   //5.最后如果没有进程要用共享内存了，共享内存是不会自动销毁的，需要用户手动销毁
   shmctl(shmid,IPC_RMID,nullptr);
}